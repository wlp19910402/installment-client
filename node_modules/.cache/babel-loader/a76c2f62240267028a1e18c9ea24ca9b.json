{"ast":null,"code":"import Test from '@/components/test';\nimport Login from '@/views/Login';\nimport Main from '@/views/Main';\n/**\n * 路由表\n * @param {*} path:地址\n * @param {*} name:名称\n * @param {*} component:组件\n * @param {*} isAuth:是否需要登录权限\n */\n\nexport default [{\n  path: '/',\n  name: '测试',\n  component: Test,\n  isAuth: true\n}, {\n  path: '/login',\n  name: '登录',\n  component: Login,\n  isAuth: false\n}, {\n  path: '/main',\n  name: '首页',\n  component: Main,\n  isAuth: true\n}];\nexport const pathMatch = path => {\n  let pathArr = path.split('/');\n  let regexp = /^\\{\\w+\\}$/i;\n  let matchRes = resArray.find(res => {\n    let itemArr = res.path.split('/');\n    itemArr.forEach((str, index) => {\n      if (regexp.test(str)) {\n        itemArr[index] = pathArr[index];\n      }\n    });\n\n    if (JSON.stringify(itemArr) === JSON.stringify(pathArr)) {\n      return res;\n    }\n  });\n\n  if (matchRes) {\n    return matchRes;\n  }\n};","map":{"version":3,"sources":["/Users/wlp6897/newProjects/cordovaProjects/installment/front-end/src/plugins/libs/routerMap.js"],"names":["Test","Login","Main","path","name","component","isAuth","pathMatch","pathArr","split","regexp","matchRes","resArray","find","res","itemArr","forEach","str","index","test","JSON","stringify"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAc,CACZ;AAACC,EAAAA,IAAI,EAAC,GAAN;AAAUC,EAAAA,IAAI,EAAC,IAAf;AAAoBC,EAAAA,SAAS,EAACL,IAA9B;AAAmCM,EAAAA,MAAM,EAAC;AAA1C,CADY,EAEZ;AAACH,EAAAA,IAAI,EAAC,QAAN;AAAeC,EAAAA,IAAI,EAAC,IAApB;AAAyBC,EAAAA,SAAS,EAACJ,KAAnC;AAAyCK,EAAAA,MAAM,EAAC;AAAhD,CAFY,EAGZ;AAACH,EAAAA,IAAI,EAAC,OAAN;AAAcC,EAAAA,IAAI,EAAC,IAAnB;AAAwBC,EAAAA,SAAS,EAACH,IAAlC;AAAuCI,EAAAA,MAAM,EAAC;AAA9C,CAHY,CAAd;AAMA,OAAO,MAAMC,SAAS,GAAIJ,IAAD,IAAU;AACjC,MAAIK,OAAO,GAAGL,IAAI,CAACM,KAAL,CAAW,GAAX,CAAd;AACA,MAAIC,MAAM,GAAG,YAAb;AACA,MAAIC,QAAQ,GAAGC,QAAQ,CAACC,IAAT,CAAeC,GAAD,IAAS;AACpC,QAAIC,OAAO,GAAGD,GAAG,CAACX,IAAJ,CAASM,KAAT,CAAe,GAAf,CAAd;AACAM,IAAAA,OAAO,CAACC,OAAR,CAAgB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC9B,UAAIR,MAAM,CAACS,IAAP,CAAYF,GAAZ,CAAJ,EAAsB;AACpBF,QAAAA,OAAO,CAACG,KAAD,CAAP,GAAiBV,OAAO,CAACU,KAAD,CAAxB;AACD;AACF,KAJD;;AAKA,QAAIE,IAAI,CAACC,SAAL,CAAeN,OAAf,MAA4BK,IAAI,CAACC,SAAL,CAAeb,OAAf,CAAhC,EAAyD;AACvD,aAAOM,GAAP;AACD;AACF,GAVc,CAAf;;AAWA,MAAIH,QAAJ,EAAc;AACZ,WAAOA,QAAP;AACD;AACF,CAjBM","sourcesContent":["import Test from '@/components/test'\nimport Login from '@/views/Login'\nimport Main from '@/views/Main'\n\n/**\n * 路由表\n * @param {*} path:地址\n * @param {*} name:名称\n * @param {*} component:组件\n * @param {*} isAuth:是否需要登录权限\n */\nexport default[\n  {path:'/',name:'测试',component:Test,isAuth:true},\n  {path:'/login',name:'登录',component:Login,isAuth:false},\n  {path:'/main',name:'首页',component:Main,isAuth:true}\n]\n\nexport const pathMatch = (path) => {\n  let pathArr = path.split('/')\n  let regexp = /^\\{\\w+\\}$/i\n  let matchRes = resArray.find((res) => {\n    let itemArr = res.path.split('/')\n    itemArr.forEach((str, index) => {\n      if (regexp.test(str)) {\n        itemArr[index] = pathArr[index]\n      }\n    })\n    if (JSON.stringify(itemArr) === JSON.stringify(pathArr)) {\n      return res\n    }\n  })\n  if (matchRes) {\n    return matchRes\n  }\n}"]},"metadata":{},"sourceType":"module"}