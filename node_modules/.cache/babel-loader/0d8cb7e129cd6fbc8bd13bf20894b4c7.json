{"ast":null,"code":"import Test from '@/components/test';\nimport Login from '@/views/Login';\nimport Main from '@/views/Main';\nimport Contact from '@/views/user/Contact';\nimport UpdatePassword from '@/views/user/UpdatePassword';\n/**\n * 路由表\n * @param {*} path:地址\n * @param {*} name:名称\n * @param {*} component:组件\n * @param {*} loginFlag:是否需要登录,登录标识\n * @param {*} exact:子集路由下包含此等组件\n * @param {*} back:是否又返回键\n */\n\nconst routerMap = [{\n  path: '/',\n  name: '测试',\n  component: Test,\n  loginFlag: true,\n  exact: true,\n  back: false\n}, {\n  path: '/login',\n  name: '登录',\n  component: Login,\n  loginFlag: false,\n  exact: true,\n  back: false\n}, {\n  path: '/main/:type',\n  name: '主要的',\n  component: Main,\n  loginFlag: true,\n  exact: false,\n  back: false\n}, {\n  path: '/user/contact',\n  name: '联系客服',\n  component: Contact,\n  loginFlag: true,\n  exact: true,\n  back: true\n}, {\n  path: '/user/updatePassword',\n  name: '修改密码',\n  component: UpdatePassword,\n  loginFlag: true,\n  exact: true,\n  back: true\n}];\nexport const routerMatch = path => {\n  const pathArr = path.split('/');\n  const regexp = /^:\\w+/i;\n  const matchRes = routerMap.find(res => {\n    const itemArr = res.path.split('/');\n    itemArr.forEach((str, index) => {\n      if (regexp.test(str)) {\n        itemArr[index] = pathArr[index];\n      }\n    });\n\n    if (JSON.stringify(itemArr) === JSON.stringify(pathArr)) {\n      return res;\n    }\n\n    return false;\n  });\n\n  if (matchRes) {\n    return matchRes;\n  }\n\n  return null;\n};\nexport default routerMap;","map":{"version":3,"sources":["/Users/wlp6897/newProjects/cordovaProjects/installment/front-end/src/plugins/libs/routerMap.js"],"names":["Test","Login","Main","Contact","UpdatePassword","routerMap","path","name","component","loginFlag","exact","back","routerMatch","pathArr","split","regexp","matchRes","find","res","itemArr","forEach","str","index","test","JSON","stringify"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,SAAS,GAAG,CAChB;AACEC,EAAAA,IAAI,EAAE,GADR;AACaC,EAAAA,IAAI,EAAE,IADnB;AACyBC,EAAAA,SAAS,EAAER,IADpC;AAC0CS,EAAAA,SAAS,EAAE,IADrD;AAC2DC,EAAAA,KAAK,EAAE,IADlE;AACwEC,EAAAA,IAAI,EAAE;AAD9E,CADgB,EAIhB;AACEL,EAAAA,IAAI,EAAE,QADR;AACkBC,EAAAA,IAAI,EAAE,IADxB;AAC8BC,EAAAA,SAAS,EAAEP,KADzC;AACgDQ,EAAAA,SAAS,EAAE,KAD3D;AACkEC,EAAAA,KAAK,EAAE,IADzE;AAC+EC,EAAAA,IAAI,EAAE;AADrF,CAJgB,EAOhB;AACEL,EAAAA,IAAI,EAAE,aADR;AACuBC,EAAAA,IAAI,EAAE,KAD7B;AACoCC,EAAAA,SAAS,EAAEN,IAD/C;AACqDO,EAAAA,SAAS,EAAE,IADhE;AACsEC,EAAAA,KAAK,EAAE,KAD7E;AACoFC,EAAAA,IAAI,EAAE;AAD1F,CAPgB,EAUhB;AACEL,EAAAA,IAAI,EAAE,eADR;AACyBC,EAAAA,IAAI,EAAE,MAD/B;AACuCC,EAAAA,SAAS,EAAEL,OADlD;AAC2DM,EAAAA,SAAS,EAAE,IADtE;AAC4EC,EAAAA,KAAK,EAAE,IADnF;AACyFC,EAAAA,IAAI,EAAE;AAD/F,CAVgB,EAahB;AACEL,EAAAA,IAAI,EAAE,sBADR;AACgCC,EAAAA,IAAI,EAAE,MADtC;AAC8CC,EAAAA,SAAS,EAAEJ,cADzD;AACyEK,EAAAA,SAAS,EAAE,IADpF;AAC0FC,EAAAA,KAAK,EAAE,IADjG;AACuGC,EAAAA,IAAI,EAAE;AAD7G,CAbgB,CAAlB;AAkBA,OAAO,MAAMC,WAAW,GAAIN,IAAD,IAAU;AACnC,QAAMO,OAAO,GAAGP,IAAI,CAACQ,KAAL,CAAW,GAAX,CAAhB;AACA,QAAMC,MAAM,GAAG,QAAf;AACA,QAAMC,QAAQ,GAAGX,SAAS,CAACY,IAAV,CAAgBC,GAAD,IAAS;AACvC,UAAMC,OAAO,GAAGD,GAAG,CAACZ,IAAJ,CAASQ,KAAT,CAAe,GAAf,CAAhB;AACAK,IAAAA,OAAO,CAACC,OAAR,CAAgB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC9B,UAAIP,MAAM,CAACQ,IAAP,CAAYF,GAAZ,CAAJ,EAAsB;AACpBF,QAAAA,OAAO,CAACG,KAAD,CAAP,GAAiBT,OAAO,CAACS,KAAD,CAAxB;AACD;AACF,KAJD;;AAKA,QAAIE,IAAI,CAACC,SAAL,CAAeN,OAAf,MAA4BK,IAAI,CAACC,SAAL,CAAeZ,OAAf,CAAhC,EAAyD;AACvD,aAAOK,GAAP;AACD;;AACD,WAAO,KAAP;AACD,GAXgB,CAAjB;;AAYA,MAAIF,QAAJ,EAAc;AACZ,WAAOA,QAAP;AACD;;AACD,SAAO,IAAP;AACD,CAnBM;AAoBP,eAAeX,SAAf","sourcesContent":["import Test from '@/components/test';\nimport Login from '@/views/Login';\nimport Main from '@/views/Main';\nimport Contact from '@/views/user/Contact';\nimport UpdatePassword from '@/views/user/UpdatePassword';\n/**\n * 路由表\n * @param {*} path:地址\n * @param {*} name:名称\n * @param {*} component:组件\n * @param {*} loginFlag:是否需要登录,登录标识\n * @param {*} exact:子集路由下包含此等组件\n * @param {*} back:是否又返回键\n */\nconst routerMap = [\n  {\n    path: '/', name: '测试', component: Test, loginFlag: true, exact: true, back: false,\n  },\n  {\n    path: '/login', name: '登录', component: Login, loginFlag: false, exact: true, back: false,\n  },\n  {\n    path: '/main/:type', name: '主要的', component: Main, loginFlag: true, exact: false, back: false,\n  },\n  {\n    path: '/user/contact', name: '联系客服', component: Contact, loginFlag: true, exact: true, back: true,\n  },\n  {\n    path: '/user/updatePassword', name: '修改密码', component: UpdatePassword, loginFlag: true, exact: true, back: true,\n  },\n];\n\nexport const routerMatch = (path) => {\n  const pathArr = path.split('/');\n  const regexp = /^:\\w+/i;\n  const matchRes = routerMap.find((res) => {\n    const itemArr = res.path.split('/');\n    itemArr.forEach((str, index) => {\n      if (regexp.test(str)) {\n        itemArr[index] = pathArr[index];\n      }\n    });\n    if (JSON.stringify(itemArr) === JSON.stringify(pathArr)) {\n      return res;\n    }\n    return false;\n  });\n  if (matchRes) {\n    return matchRes;\n  }\n  return null;\n};\nexport default routerMap;\n"]},"metadata":{},"sourceType":"module"}