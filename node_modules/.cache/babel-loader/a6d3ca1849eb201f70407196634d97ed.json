{"ast":null,"code":"import Test from '@/components/test';\nimport Login from '@/views/Login';\nimport Main from '@/views/Main';\nimport Contact from '@/views/user/Contact';\n/**\n * 路由表\n * @param {*} path:地址\n * @param {*} name:名称\n * @param {*} component:组件\n * @param {*} loginFlag:是否需要登录,登录标识\n * @param {*} exact:子集路由下包含此等组件\n * @param {*} back:是否又返回键\n */\n\nconst routerMap = [{\n  path: '/',\n  name: '测试',\n  component: Test,\n  loginFlag: true,\n  exact: true,\n  back: false\n}, {\n  path: '/login',\n  name: '登录',\n  component: Login,\n  loginFlag: false,\n  exact: true,\n  back: false\n}, {\n  path: '/main/:type',\n  name: '主要的',\n  component: Main,\n  loginFlag: true,\n  exact: false,\n  back: false\n}, {\n  path: '/user/contact',\n  name: '联系客服',\n  component: Contact,\n  loginFlag: true,\n  exact: true,\n  back: true\n}, {\n  path: '/user/resetPassword',\n  name: \"修改密码\",\n  component: ResetPassword\n}];\nexport const routerMatch = path => {\n  let pathArr = path.split('/');\n  let regexp = /^:\\w+/i;\n  let matchRes = routerMap.find(res => {\n    let itemArr = res.path.split('/');\n    itemArr.forEach((str, index) => {\n      if (regexp.test(str)) {\n        itemArr[index] = pathArr[index];\n      }\n    });\n\n    if (JSON.stringify(itemArr) === JSON.stringify(pathArr)) {\n      return res;\n    } else {\n      return false;\n    }\n  });\n\n  if (matchRes) {\n    return matchRes;\n  } else {\n    return null;\n  }\n};\nexport default routerMap;","map":{"version":3,"sources":["/Users/wlp6897/newProjects/cordovaProjects/installment/front-end/src/plugins/libs/routerMap.js"],"names":["Test","Login","Main","Contact","routerMap","path","name","component","loginFlag","exact","back","ResetPassword","routerMatch","pathArr","split","regexp","matchRes","find","res","itemArr","forEach","str","index","test","JSON","stringify"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,MAAMC,SAAS,GAAE,CAChB;AAACC,EAAAA,IAAI,EAAC,GAAN;AAAUC,EAAAA,IAAI,EAAC,IAAf;AAAoBC,EAAAA,SAAS,EAACP,IAA9B;AAAmCQ,EAAAA,SAAS,EAAC,IAA7C;AAAkDC,EAAAA,KAAK,EAAC,IAAxD;AAA6DC,EAAAA,IAAI,EAAC;AAAlE,CADgB,EAEhB;AAACL,EAAAA,IAAI,EAAC,QAAN;AAAeC,EAAAA,IAAI,EAAC,IAApB;AAAyBC,EAAAA,SAAS,EAACN,KAAnC;AAAyCO,EAAAA,SAAS,EAAC,KAAnD;AAAyDC,EAAAA,KAAK,EAAC,IAA/D;AAAoEC,EAAAA,IAAI,EAAC;AAAzE,CAFgB,EAGhB;AAACL,EAAAA,IAAI,EAAC,aAAN;AAAoBC,EAAAA,IAAI,EAAC,KAAzB;AAA+BC,EAAAA,SAAS,EAACL,IAAzC;AAA8CM,EAAAA,SAAS,EAAC,IAAxD;AAA6DC,EAAAA,KAAK,EAAC,KAAnE;AAAyEC,EAAAA,IAAI,EAAC;AAA9E,CAHgB,EAIhB;AAACL,EAAAA,IAAI,EAAC,eAAN;AAAuBC,EAAAA,IAAI,EAAC,MAA5B;AAAmCC,EAAAA,SAAS,EAACJ,OAA7C;AAAqDK,EAAAA,SAAS,EAAC,IAA/D;AAAoEC,EAAAA,KAAK,EAAC,IAA1E;AAA+EC,EAAAA,IAAI,EAAC;AAApF,CAJgB,EAKhB;AAACL,EAAAA,IAAI,EAAC,qBAAN;AAA4BC,EAAAA,IAAI,EAAC,MAAjC;AAAwCC,EAAAA,SAAS,EAACI;AAAlD,CALgB,CAAjB;AAQD,OAAO,MAAMC,WAAW,GAAEP,IAAD,IAAQ;AAC/B,MAAIQ,OAAO,GAAGR,IAAI,CAACS,KAAL,CAAW,GAAX,CAAd;AACA,MAAIC,MAAM,GAAG,QAAb;AACA,MAAIC,QAAQ,GAAGZ,SAAS,CAACa,IAAV,CAAgBC,GAAD,IAAS;AACrC,QAAIC,OAAO,GAAGD,GAAG,CAACb,IAAJ,CAASS,KAAT,CAAe,GAAf,CAAd;AACAK,IAAAA,OAAO,CAACC,OAAR,CAAgB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC9B,UAAIP,MAAM,CAACQ,IAAP,CAAYF,GAAZ,CAAJ,EAAsB;AACpBF,QAAAA,OAAO,CAACG,KAAD,CAAP,GAAiBT,OAAO,CAACS,KAAD,CAAxB;AACD;AACF,KAJD;;AAKA,QAAIE,IAAI,CAACC,SAAL,CAAeN,OAAf,MAA4BK,IAAI,CAACC,SAAL,CAAeZ,OAAf,CAAhC,EAAyD;AACvD,aAAOK,GAAP;AACD,KAFD,MAEK;AACH,aAAO,KAAP;AACD;AACF,GAZc,CAAf;;AAaA,MAAIF,QAAJ,EAAc;AACZ,WAAOA,QAAP;AACD,GAFD,MAEK;AACH,WAAO,IAAP;AACD;AACF,CArBM;AAsBP,eAAeZ,SAAf","sourcesContent":["import Test from '@/components/test'\nimport Login from '@/views/Login'\nimport Main from '@/views/Main'\nimport Contact from '@/views/user/Contact'\n/**\n * 路由表\n * @param {*} path:地址\n * @param {*} name:名称\n * @param {*} component:组件\n * @param {*} loginFlag:是否需要登录,登录标识\n * @param {*} exact:子集路由下包含此等组件\n * @param {*} back:是否又返回键\n */\n const routerMap= [\n  {path:'/',name:'测试',component:Test,loginFlag:true,exact:true,back:false},\n  {path:'/login',name:'登录',component:Login,loginFlag:false,exact:true,back:false},\n  {path:'/main/:type',name:'主要的',component:Main,loginFlag:true,exact:false,back:false},\n  {path:'/user/contact' ,name:'联系客服',component:Contact,loginFlag:true,exact:true,back:true},\n  {path:'/user/resetPassword',name:\"修改密码\",component:ResetPassword}\n]\n\nexport const routerMatch=(path)=>{\n  let pathArr = path.split('/')\n  let regexp = /^:\\w+/i\n  let matchRes = routerMap.find((res) => {\n    let itemArr = res.path.split('/')\n    itemArr.forEach((str, index) => {\n      if (regexp.test(str)) {\n        itemArr[index] = pathArr[index]\n      }\n    })\n    if (JSON.stringify(itemArr) === JSON.stringify(pathArr)) {\n      return res\n    }else{\n      return false\n    }\n  })\n  if (matchRes) {\n    return matchRes\n  }else{\n    return null\n  }\n}\nexport default routerMap"]},"metadata":{},"sourceType":"module"}