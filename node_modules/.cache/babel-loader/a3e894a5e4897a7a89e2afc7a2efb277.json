{"ast":null,"code":"import \"antd-mobile/lib/tab-bar/style\";\nimport _TabBar from \"antd-mobile/lib/tab-bar\";\nvar _jsxFileName = \"/Users/wlp6897/newProjects/cordovaProjects/installment/front-end/src/views/Main.js\";\nimport React, { Component } from 'react';\nimport NavHeader from '@/components/common/NavHeader';\nimport { mainPageMap, mainTypeMatch } from '@/plugins/libs/mainMap';\nimport PropTypes from 'prop-types';\n\nclass Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedTab: 'home'\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      selectedTab: mainTypeMatch(this.props.match.params.type).type\n    });\n  }\n\n  componentDidUpdate(old_props, old_state) {\n    const old_p_type = old_props.match.params.type;\n    const new_p_type = this.props.match.params.type;\n\n    if (old_p_type !== new_p_type) {\n      console.log(old_state);\n      this.setState({\n        selectedTab: mainTypeMatch(this.props.match.params.type).type\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"qm-main-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavHeader, {\n      title: mainTypeMatch(this.props.match.params.type).headerName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(_TabBar, {\n      unselectedTintColor: \"#888\",\n      tintColor: \"#77CC99\",\n      barTintColor: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, mainPageMap.map((item, index) => /*#__PURE__*/React.createElement(_TabBar.Item, {\n      title: item.title,\n      key: index,\n      icon: item.icon(),\n      selectedIcon: item.icon(),\n      selected: this.state.selectedTab === item.type,\n      onPress: () => {\n        this.props.history.push(`/main/${item.type}`);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, item.component(this)))));\n  }\n\n}\n\nMain.propTypes = {\n  match: PropTypes.object,\n  history: PropTypes.object\n};\nexport default Main;","map":{"version":3,"sources":["/Users/wlp6897/newProjects/cordovaProjects/installment/front-end/src/views/Main.js"],"names":["React","Component","NavHeader","mainPageMap","mainTypeMatch","PropTypes","Main","constructor","args","state","selectedTab","componentDidMount","setState","props","match","params","type","componentDidUpdate","old_props","old_state","old_p_type","new_p_type","console","log","render","headerName","map","item","index","title","icon","history","push","component","propTypes","object"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,wBAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AACA,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AAC3BM,EAAAA,WAAW,CAAC,GAAGC,IAAJ,EAAU;AACnB,UAAM,GAAGA,IAAT;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL,CAAc;AACZF,MAAAA,WAAW,EAAEN,aAAa,CAAC,KAAKS,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,IAAzB,CAAb,CAA4CA;AAD7C,KAAd;AAGD;;AAEDC,EAAAA,kBAAkB,CAAEC,SAAF,EAAaC,SAAb,EAAwB;AACxC,UAAMC,UAAU,GAAGF,SAAS,CAACJ,KAAV,CAAgBC,MAAhB,CAAuBC,IAA1C;AACA,UAAMK,UAAU,GAAG,KAAKR,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,IAA3C;;AACA,QAAII,UAAU,KAAKC,UAAnB,EAA+B;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACA,WAAKP,QAAL,CAAc;AACZF,QAAAA,WAAW,EAAEN,aAAa,CAAC,KAAKS,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,IAAzB,CAAb,CAA4CA;AAD7C,OAAd;AAGD;AACF;;AAEDQ,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEpB,aAAa,CAAC,KAAKS,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,IAAzB,CAAb,CAA4CS,UAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AACE,MAAA,mBAAmB,EAAC,MADtB;AAEE,MAAA,SAAS,EAAC,SAFZ;AAGE,MAAA,YAAY,EAAC,OAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGtB,WAAW,CAACuB,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,kBACf,4BAAQ,IAAR;AACE,MAAA,KAAK,EAAED,IAAI,CAACE,KADd;AAEE,MAAA,GAAG,EAAED,KAFP;AAGE,MAAA,IAAI,EAAED,IAAI,CAACG,IAAL,EAHR;AAIE,MAAA,YAAY,EAAEH,IAAI,CAACG,IAAL,EAJhB;AAKE,MAAA,QAAQ,EAAE,KAAKrB,KAAL,CAAWC,WAAX,KAA2BiB,IAAI,CAACX,IAL5C;AAME,MAAA,OAAO,EAAE,MAAM;AACb,aAAKH,KAAL,CAAWkB,OAAX,CAAmBC,IAAnB,CAAyB,SAAQL,IAAI,CAACX,IAAK,EAA3C;AACD,OARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUGW,IAAI,CAACM,SAAL,CAAe,IAAf,CAVH,CADD,CALH,CAFF,CADF;AAyBD;;AAnD0B;;AAqD7B3B,IAAI,CAAC4B,SAAL,GAAiB;AACfpB,EAAAA,KAAK,EAAET,SAAS,CAAC8B,MADF;AAEfJ,EAAAA,OAAO,EAAC1B,SAAS,CAAC8B;AAFH,CAAjB;AAIA,eAAe7B,IAAf","sourcesContent":["import { TabBar } from 'antd-mobile';\nimport React, { Component } from 'react';\nimport NavHeader from '@/components/common/NavHeader';\nimport { mainPageMap, mainTypeMatch } from '@/plugins/libs/mainMap';\nimport PropTypes from 'prop-types';\nclass Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedTab: 'home',\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      selectedTab: mainTypeMatch(this.props.match.params.type).type,\n    });\n  }\n\n  componentDidUpdate (old_props, old_state) {\n    const old_p_type = old_props.match.params.type;\n    const new_p_type = this.props.match.params.type;\n    if (old_p_type !== new_p_type) {\n      console.log(old_state)\n      this.setState({\n        selectedTab: mainTypeMatch(this.props.match.params.type).type,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"qm-main-page\">\n        <NavHeader title={mainTypeMatch(this.props.match.params.type).headerName} />\n        <TabBar\n          unselectedTintColor=\"#888\"\n          tintColor=\"#77CC99\"\n          barTintColor=\"white\"\n        >\n          {mainPageMap.map((item, index) => (\n            <TabBar.Item\n              title={item.title}\n              key={index}\n              icon={item.icon()}\n              selectedIcon={item.icon()}\n              selected={this.state.selectedTab === item.type}\n              onPress={() => {\n                this.props.history.push(`/main/${item.type}`);\n              }}\n            >\n              {item.component(this)}\n            </TabBar.Item>\n          ))}\n        </TabBar>\n      </div>\n    );\n  }\n}\nMain.propTypes = {\n  match: PropTypes.object,\n  history:PropTypes.object\n}\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}