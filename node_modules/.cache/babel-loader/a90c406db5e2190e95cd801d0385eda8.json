{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _classnames2 = require('classnames');\n\nvar _classnames3 = _interopRequireDefault(_classnames2);\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _rmcNotification = require('rmc-notification');\n\nvar _rmcNotification2 = _interopRequireDefault(_rmcNotification);\n\nvar _icon = require('../icon');\n\nvar _icon2 = _interopRequireDefault(_icon);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj['default'] = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar SHORT = 3;\nvar _config = {\n  duration: SHORT,\n  mask: true\n};\nvar messageInstance = void 0;\nvar messageNeedHide = void 0;\nvar prefixCls = 'am-toast';\n\nfunction getMessageInstance(mask, callback) {\n  var _classnames;\n\n  _rmcNotification2['default'].newInstance({\n    prefixCls: prefixCls,\n    style: {},\n    transitionName: 'am-fade',\n    className: (0, _classnames3['default'])((_classnames = {}, (0, _defineProperty3['default'])(_classnames, prefixCls + '-mask', mask), (0, _defineProperty3['default'])(_classnames, prefixCls + '-nomask', !mask), _classnames))\n  }, function (notification) {\n    return callback && callback(notification);\n  });\n}\n\nfunction notice(content, type) {\n  var duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _config.duration;\n  var _onClose = arguments[3];\n  var mask = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : _config.mask;\n  var iconTypes = {\n    info: '',\n    success: 'success',\n    fail: 'fail',\n    offline: 'dislike',\n    loading: 'loading'\n  };\n  var iconType = iconTypes[type];\n  messageNeedHide = false;\n  getMessageInstance(mask, function (notification) {\n    if (!notification) {\n      return;\n    }\n\n    if (messageInstance) {\n      messageInstance.destroy();\n      messageInstance = null;\n    }\n\n    if (messageNeedHide) {\n      notification.destroy();\n      messageNeedHide = false;\n      return;\n    }\n\n    messageInstance = notification;\n    notification.notice({\n      duration: duration,\n      style: {},\n      content: !!iconType ? React.createElement('div', {\n        className: prefixCls + '-text ' + prefixCls + '-text-icon',\n        role: 'alert',\n        'aria-live': 'assertive'\n      }, React.createElement(_icon2['default'], {\n        type: iconType,\n        size: 'lg'\n      }), React.createElement('div', {\n        className: prefixCls + '-text-info'\n      }, content)) : React.createElement('div', {\n        className: prefixCls + '-text',\n        role: 'alert',\n        'aria-live': 'assertive'\n      }, React.createElement('div', null, content)),\n      closable: true,\n      onClose: function onClose() {\n        if (_onClose) {\n          _onClose();\n        }\n\n        notification.destroy();\n        notification = null;\n        messageInstance = null;\n      }\n    });\n  });\n}\n\nexports['default'] = {\n  SHORT: SHORT,\n  LONG: 8,\n  show: function show(content, duration, mask) {\n    return notice(content, 'info', duration, function () {}, mask);\n  },\n  info: function info(content, duration, onClose, mask) {\n    return notice(content, 'info', duration, onClose, mask);\n  },\n  success: function success(content, duration, onClose, mask) {\n    return notice(content, 'success', duration, onClose, mask);\n  },\n  fail: function fail(content, duration, onClose, mask) {\n    return notice(content, 'fail', duration, onClose, mask);\n  },\n  offline: function offline(content, duration, onClose, mask) {\n    return notice(content, 'offline', duration, onClose, mask);\n  },\n  loading: function loading(content, duration, onClose, mask) {\n    return notice(content, 'loading', duration, onClose, mask);\n  },\n  hide: function hide() {\n    if (messageInstance) {\n      messageInstance.destroy();\n      messageInstance = null;\n    } else {\n      messageNeedHide = true;\n    }\n  },\n  config: function config() {\n    var conf = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var _conf$duration = conf.duration,\n        duration = _conf$duration === undefined ? SHORT : _conf$duration,\n        mask = conf.mask;\n    _config.duration = duration;\n\n    if (mask === false) {\n      _config.mask = false;\n    }\n  }\n};\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}