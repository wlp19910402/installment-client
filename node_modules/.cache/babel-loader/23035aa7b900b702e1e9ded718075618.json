{"ast":null,"code":"import \"antd-mobile/lib/flex/style\";\nimport _Flex from \"antd-mobile/lib/flex\";\nimport \"antd-mobile/lib/wing-blank/style\";\nimport _WingBlank from \"antd-mobile/lib/wing-blank\";\nimport \"antd-mobile/lib/button/style\";\nimport _Button from \"antd-mobile/lib/button\";\nimport \"antd-mobile/lib/white-space/style\";\nimport _WhiteSpace from \"antd-mobile/lib/white-space\";\nimport \"antd-mobile/lib/list/style\";\nimport _List from \"antd-mobile/lib/list\";\nimport \"antd-mobile/lib/input-item/style\";\nimport _InputItem from \"antd-mobile/lib/input-item\";\nimport \"antd-mobile/lib/toast/style\";\nimport _Toast from \"antd-mobile/lib/toast\";\nvar _jsxFileName = \"/Users/wlp6897/newProjects/cordovaProjects/installment/front-end/src/views/Login.js\";\nimport React from 'react';\nimport { createForm } from 'rc-form';\nimport { USER_IDNTITY, getIdntityName, getUnIdntityName } from '@/plugins/resurceStatus/user';\nimport { regexp } from '@/plugins/common/regexp';\nimport { SET_USER_INFO } from '@/store/actions';\nimport { connect } from 'react-redux';\nimport { CLIENT_INTERFACE } from '@/plugins/libs/interfaceMap';\nimport axios from 'axios';\n\nclass BasicInputExample extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.tiggerLogin = async () => {\n      const {\n        getFieldValue\n      } = this.props.form;\n      const accountId = getFieldValue('accountId');\n      const password = getFieldValue('pwd');\n      const accountType = this.state.loginUserIdentity;\n\n      if (accountId === undefined || password === undefined) {\n        _Toast.info('账号和密码不能为空', 1);\n\n        return;\n      }\n\n      if (!regexp.regMobile.test(accountId)) {\n        _Toast.info('请输入正确的11位手机号', 1);\n\n        return;\n      } //基本验证通过，请求登录\n\n\n      try {\n        let res = await axios({\n          url: CLIENT_INTERFACE.LOGIN,\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json; charset=UTF-8'\n          },\n          data: {\n            accountId,\n            password,\n            accountType\n          }\n        });\n\n        if (res.data.err !== '0') {\n          _Toast.info(res.data.msg, 1);\n\n          return;\n        }\n\n        _Toast.info('请求呢', 1);\n\n        let userData = {\n          accountId,\n          accountType,\n          token: res.data.result.token\n        };\n        this.props.setUserInfo(userData);\n\n        if (this.props.history.location.pathname === '/login') {\n          this.props.history.replace(this.props.user.redirectPath);\n        }\n      } catch (err) {\n        console.log(err);\n\n        _Toast.info('请求异常', 1); //需删除\n\n\n        this.props.history.push('/main'); //需删除\n      }\n    };\n\n    this.switchIndtify = () => {\n      this.setState({\n        loginUserIdentity: this.state.loginUserIdentity === USER_IDNTITY.FOREIGN_STAFF ? USER_IDNTITY.BANK_STAFF : USER_IDNTITY.FOREIGN_STAFF\n      });\n    };\n\n    this.state = {\n      loginUserIdentity: USER_IDNTITY.BANK_STAFF\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loginUserIdentity: this.props.user.accountType\n    });\n    document.body.querySelector(\".qm-login-page\").style.height = window.innerHeight + \"px\";\n  }\n\n  render() {\n    const {\n      getFieldProps\n    } = this.props.form;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"qm-login-page qm-fill-width \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"qm-title-box sub-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, getIdntityName(this.state.loginUserIdentity), \"\\u767B\\u5F55\")), /*#__PURE__*/React.createElement(_Flex, {\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(_Flex.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(_WingBlank, {\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(_List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(_InputItem, Object.assign({}, getFieldProps('accountId'), {\n      placeholder: \"\\u8D26\\u53F7\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(_List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(_InputItem, Object.assign({}, getFieldProps('pwd'), {\n      type: \"password\",\n      placeholder: \"\\u5BC6\\u7801\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(_WhiteSpace, {\n      size: \"xl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(_WhiteSpace, {\n      size: \"xl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(_WhiteSpace, {\n      size: \"xl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(_Button, {\n      type: \"primary\",\n      onClick: this.tiggerLogin.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, \"\\u767B\\u5F55\"), /*#__PURE__*/React.createElement(_WhiteSpace, {\n      size: \"md\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(_Button, {\n      type: \"default\",\n      onClick: this.switchIndtify.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, \"\\u5207\\u6362\\u4E3A\\u201C\", getUnIdntityName(this.state.loginUserIdentity), \"\\u4EBA\\u5458\\u201D\")))));\n  }\n\n}\n\nconst BasicInputExampleWrapper = createForm()(BasicInputExample);\nexport default connect((state, props) => {\n  return state;\n}, {\n  setUserInfo(data) {\n    return {\n      type: SET_USER_INFO,\n      data\n    };\n  }\n\n})(BasicInputExampleWrapper);","map":{"version":3,"sources":["/Users/wlp6897/newProjects/cordovaProjects/installment/front-end/src/views/Login.js"],"names":["React","createForm","USER_IDNTITY","getIdntityName","getUnIdntityName","regexp","SET_USER_INFO","connect","CLIENT_INTERFACE","axios","BasicInputExample","Component","constructor","args","tiggerLogin","getFieldValue","props","form","accountId","password","accountType","state","loginUserIdentity","undefined","info","regMobile","test","res","url","LOGIN","method","headers","data","err","msg","userData","token","result","setUserInfo","history","location","pathname","replace","user","redirectPath","console","log","push","switchIndtify","setState","FOREIGN_STAFF","BANK_STAFF","componentDidMount","document","body","querySelector","style","height","window","innerHeight","render","getFieldProps","bind","BasicInputExampleWrapper","type"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,QAA2B,SAA3B;AACA,SAAQC,YAAR,EAAqBC,cAArB,EAAoCC,gBAApC,QAA2D,8BAA3D;AACA,SAAQC,MAAR,QAAqB,yBAArB;AACA,SAAQC,aAAR,QAA2B,iBAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,gBAAR,QAA8B,6BAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,iBAAN,SAAgCV,KAAK,CAACW,SAAtC,CAAgD;AAC9CC,EAAAA,WAAW,CAAC,GAAGC,IAAJ,EAAU;AACpB,UAAM,GAAGA,IAAT;;AADoB,SAYrBC,WAZqB,GAYP,YAAW;AACvB,YAAM;AAAEC,QAAAA;AAAF,UAAoB,KAAKC,KAAL,CAAWC,IAArC;AACA,YAAMC,SAAS,GAAGH,aAAa,CAAC,WAAD,CAA/B;AACA,YAAMI,QAAQ,GAAGJ,aAAa,CAAC,KAAD,CAA9B;AACA,YAAMK,WAAW,GAAG,KAAKC,KAAL,CAAWC,iBAA/B;;AACA,UAAGJ,SAAS,KAAGK,SAAZ,IAAuBJ,QAAQ,KAAGI,SAArC,EAA+C;AAC7C,eAAMC,IAAN,CAAW,WAAX,EAAwB,CAAxB;;AACA;AACD;;AACD,UAAG,CAACnB,MAAM,CAACoB,SAAP,CAAiBC,IAAjB,CAAsBR,SAAtB,CAAJ,EAAqC;AACnC,eAAMM,IAAN,CAAW,cAAX,EAA2B,CAA3B;;AACA;AACD,OAZsB,CAavB;;;AACA,UAAG;AACD,YAAIG,GAAG,GAAG,MAAMlB,KAAK,CAAC;AACpBmB,UAAAA,GAAG,EAAEpB,gBAAgB,CAACqB,KADF;AAEpBC,UAAAA,MAAM,EAAE,MAFY;AAGpBC,UAAAA,OAAO,EAAE;AAAE,4BAAgB;AAAlB,WAHW;AAIpBC,UAAAA,IAAI,EAAC;AAAEd,YAAAA,SAAF;AAAcC,YAAAA,QAAd;AAAyBC,YAAAA;AAAzB;AAJe,SAAD,CAArB;;AAMA,YAAGO,GAAG,CAACK,IAAJ,CAASC,GAAT,KAAe,GAAlB,EAAsB;AACpB,iBAAMT,IAAN,CAAWG,GAAG,CAACK,IAAJ,CAASE,GAApB,EAAyB,CAAzB;;AACA;AACD;;AACD,eAAMV,IAAN,CAAW,KAAX,EAAkB,CAAlB;;AACA,YAAIW,QAAQ,GAAG;AAAEjB,UAAAA,SAAF;AAAcE,UAAAA,WAAd;AAA2BgB,UAAAA,KAAK,EAACT,GAAG,CAACK,IAAJ,CAASK,MAAT,CAAgBD;AAAjD,SAAf;AACA,aAAKpB,KAAL,CAAWsB,WAAX,CAAuBH,QAAvB;;AACA,YAAG,KAAKnB,KAAL,CAAWuB,OAAX,CAAmBC,QAAnB,CAA4BC,QAA5B,KAAuC,QAA1C,EAAmD;AACjD,eAAKzB,KAAL,CAAWuB,OAAX,CAAmBG,OAAnB,CAA2B,KAAK1B,KAAL,CAAW2B,IAAX,CAAgBC,YAA3C;AACD;AACA,OAjBH,CAiBG,OAAMX,GAAN,EAAU;AACTY,QAAAA,OAAO,CAACC,GAAR,CAAYb,GAAZ;;AACA,eAAMT,IAAN,CAAW,MAAX,EAAmB,CAAnB,EAFS,CAEc;;;AACvB,aAAKR,KAAL,CAAWuB,OAAX,CAAmBQ,IAAnB,CAAwB,OAAxB,EAHS,CAGyB;AACnC;AACJ,KAhDoB;;AAAA,SAkDrBC,aAlDqB,GAkDP,MAAI;AAChB,WAAKC,QAAL,CAAc;AACZ3B,QAAAA,iBAAiB,EAAC,KAAKD,KAAL,CAAWC,iBAAX,KAA+BpB,YAAY,CAACgD,aAA5C,GAA0DhD,YAAY,CAACiD,UAAvE,GAAkFjD,YAAY,CAACgD;AADrG,OAAd;AAGD,KAtDoB;;AAErB,SAAK7B,KAAL,GAAW;AACPC,MAAAA,iBAAiB,EAACpB,YAAY,CAACiD;AADxB,KAAX;AAGC;;AACDC,EAAAA,iBAAiB,GAAE;AACjB,SAAKH,QAAL,CAAc;AACZ3B,MAAAA,iBAAiB,EAAC,KAAKN,KAAL,CAAW2B,IAAX,CAAgBvB;AADtB,KAAd;AAGAiC,IAAAA,QAAQ,CAACC,IAAT,CAAcC,aAAd,CAA4B,gBAA5B,EAA8CC,KAA9C,CAAoDC,MAApD,GAA6DC,MAAM,CAACC,WAAP,GAAqB,IAAlF;AACD;;AA4CDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAoB,KAAK7C,KAAL,CAAWC,IAArC;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBd,cAAc,CAAC,KAAKkB,KAAL,CAAWC,iBAAZ,CAAtC,iBADF,CADF,eAIE;AAAM,MAAA,OAAO,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,0BAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACM;AAAW,MAAA,IAAI,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,kDAAeuC,aAAa,CAAC,WAAD,CAA5B;AAA4C,MAAA,WAAW,EAAC,cAAxD;AAA8D,MAAA,IAAI,EAAC,MAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,kDAAeA,aAAa,CAAC,KAAD,CAA5B;AAAqC,MAAA,IAAI,EAAC,UAA1C;AAAqD,MAAA,WAAW,EAAC,cAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CAJA,eAOA;AAAY,MAAA,IAAI,EAAC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPA,eAQA;AAAY,MAAA,IAAI,EAAC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARA,eASA;AAAY,MAAA,IAAI,EAAC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATA,eAUA;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAE,KAAK/C,WAAL,CAAiBgD,IAAjB,CAAsB,IAAtB,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVA,eAWA;AAAY,MAAA,IAAI,EAAC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXA,eAYA;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAE,KAAKd,aAAL,CAAmBc,IAAnB,CAAwB,IAAxB,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAoE1D,gBAAgB,CAAC,KAAKiB,KAAL,CAAWC,iBAAZ,CAApF,uBAZA,CADN,CADF,CAJF,CADF;AAyBD;;AAnF6C;;AAsFhD,MAAMyC,wBAAwB,GAAG9D,UAAU,GAAGS,iBAAH,CAA3C;AAEA,eAAeH,OAAO,CAAC,CAACc,KAAD,EAAOL,KAAP,KAAe;AACrC,SAAOK,KAAP;AACA,CAFqB,EAEpB;AACDiB,EAAAA,WAAW,CAACN,IAAD,EAAM;AAChB,WAAM;AACLgC,MAAAA,IAAI,EAAC1D,aADA;AAEL0B,MAAAA;AAFK,KAAN;AAIC;;AAND,CAFoB,CAAP,CASZ+B,wBATY,CAAf","sourcesContent":["import React from 'react';\nimport { List, InputItem, WhiteSpace ,Button,WingBlank,Flex,Toast} from 'antd-mobile';\nimport { createForm } from 'rc-form';\nimport {USER_IDNTITY,getIdntityName,getUnIdntityName} from '@/plugins/resurceStatus/user'\nimport {regexp} from '@/plugins/common/regexp'\nimport {SET_USER_INFO}from '@/store/actions'\nimport {connect} from 'react-redux'\nimport {CLIENT_INTERFACE}from '@/plugins/libs/interfaceMap'\nimport axios from 'axios'\nclass BasicInputExample extends React.Component {\n  constructor(...args) {\n\t  super(...args);\n\t\tthis.state={\n      loginUserIdentity:USER_IDNTITY.BANK_STAFF\n\t\t}\n  }\n  componentDidMount(){\n    this.setState({\n      loginUserIdentity:this.props.user.accountType\n    })\n    document.body.querySelector(\".qm-login-page\").style.height = window.innerHeight + \"px\"\n  }\n  tiggerLogin = async() => {\n    const { getFieldValue } = this.props.form;\n    const accountId = getFieldValue('accountId');\n    const password = getFieldValue('pwd');\n    const accountType = this.state.loginUserIdentity;\n    if(accountId===undefined||password===undefined){\n      Toast.info('账号和密码不能为空', 1);\n      return\n    }\n    if(!regexp.regMobile.test(accountId)){\n      Toast.info('请输入正确的11位手机号', 1);\n      return\n    }\n    //基本验证通过，请求登录\n    try{\n      let res = await axios({\n        url: CLIENT_INTERFACE.LOGIN,\n        method: 'post',\n        headers: { 'Content-Type': 'application/json; charset=UTF-8' },\n        data:{ accountId,  password,  accountType }\n      })\n      if(res.data.err!=='0'){\n        Toast.info(res.data.msg, 1);\n        return\n      }\n      Toast.info('请求呢', 1);\n      let userData = { accountId,  accountType, token:res.data.result.token}\n      this.props.setUserInfo(userData)\n      if(this.props.history.location.pathname==='/login'){\n        this.props.history.replace(this.props.user.redirectPath);\n      }\n      }catch(err){\n        console.log(err)\n        Toast.info('请求异常', 1); //需删除\n        this.props.history.push('/main'); //需删除\n      }\n  }\n  //切换身份登录\n  switchIndtify=()=>{\n    this.setState({\n      loginUserIdentity:this.state.loginUserIdentity===USER_IDNTITY.FOREIGN_STAFF?USER_IDNTITY.BANK_STAFF:USER_IDNTITY.FOREIGN_STAFF\n    })\n  }\n  render() {\n    const { getFieldProps } = this.props.form;\n    return (\n      <div className=\"qm-login-page qm-fill-width \">\n        <div className=\"qm-title-box sub-title\">\n          <div className=\"title\">{getIdntityName(this.state.loginUserIdentity)}登录</div>\n        </div>\n        <Flex justify=\"center\">\n          <Flex.Item>\n                <WingBlank size=\"lg\">\n                <List>\n                  <InputItem {...getFieldProps('accountId')}  placeholder=\"账号\"  type=\"text\"></InputItem>\n                </List>\n                <List>\n                  <InputItem {...getFieldProps('pwd')} type=\"password\" placeholder=\"密码\"></InputItem>\n                </List>\n                <WhiteSpace size=\"xl\"/>\n                <WhiteSpace size=\"xl\"/>\n                <WhiteSpace size=\"xl\"/>\n                <Button type=\"primary\" onClick={this.tiggerLogin.bind(this)}>登录</Button>\n                <WhiteSpace size=\"md\"/>\n                <Button type=\"default\" onClick={this.switchIndtify.bind(this)}>切换为“{getUnIdntityName(this.state.loginUserIdentity)}人员”</Button>\n                </WingBlank>\n          </Flex.Item>\n        </Flex>\n      </div>\n    );\n  }\n}\n\nconst BasicInputExampleWrapper = createForm()(BasicInputExample);\n\nexport default connect((state,props)=>{\n\treturn state\n},{\n\tsetUserInfo(data){\n\t\treturn{\n\t\t\ttype:SET_USER_INFO,\n\t\t\tdata\n\t\t}\n  }\n})(BasicInputExampleWrapper)"]},"metadata":{},"sourceType":"module"}