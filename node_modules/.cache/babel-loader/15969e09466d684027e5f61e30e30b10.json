{"ast":null,"code":"import Axios from 'axios';\nimport { getStorage } from '@/plugins/common/storage';\nlet baseUrl = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_BASE_URL : \"\";\nconst axios = Axios.create({\n  baseURL: baseUrl,\n  timeout: 2000,\n  headers: {\n    'Content-Type': 'foapplication/json;charset=UTF-8obar'\n  }\n}); //请求前干点事情，加上账号id和类型，token在头部\n\naxios.interceptors.request.use(config => {\n  //从localstorage中拿数据\n  let storageUserInfo = getStorage('storageUserInfo');\n\n  if (!storageUserInfo) {\n    storageUserInfo = {\n      accountId: null,\n      accountType: null,\n      token: null\n    };\n  } //本地存储的用户信息不能为空\n\n\n  if (!storageUserInfo.accountId || !storageUserInfo.accountType || !storageUserInfo.token) {\n    storageUserInfo = {\n      accountId: null,\n      accountType: null,\n      token: null\n    };\n  }\n\n  let {\n    accountId,\n    accountType,\n    token\n  } = storageUserInfo;\n  config.headers.accountId = accountId;\n  config.headers.accountType = accountType;\n  config.headers.token = token;\n  return config;\n});\naxios.interceptors.response.use(function (response) {\n  // 对响应数据做点什么\n  return response;\n}, function (error) {\n  // 对响应错误做点什么\n  return Promise.reject(error);\n});\nexport default axios;","map":{"version":3,"sources":["/Users/wlp6897/newProjects/cordovaProjects/installment/front-end/src/plugins/requestServer/httpClient.js"],"names":["Axios","getStorage","baseUrl","process","env","NODE_ENV","REACT_APP_BASE_URL","axios","create","baseURL","timeout","headers","interceptors","request","use","config","storageUserInfo","accountId","accountType","token","response","error","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAwB,0BAAxB;AAEA,IAAIC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAuB,YAAvB,GAAoCF,OAAO,CAACC,GAAR,CAAYE,kBAAhD,GAAmE,EAAjF;AACA,MAAMC,KAAK,GAAGP,KAAK,CAACQ,MAAN,CAAa;AACzBC,EAAAA,OAAO,EAAEP,OADgB;AAEzBQ,EAAAA,OAAO,EAAE,IAFgB;AAGzBC,EAAAA,OAAO,EAAE;AAAE,oBAAgB;AAAlB;AAHgB,CAAb,CAAd,C,CAMA;;AACAJ,KAAK,CAACK,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAAgCC,MAAD,IAAU;AACvC;AACA,MAAIC,eAAe,GAACf,UAAU,CAAC,iBAAD,CAA9B;;AACA,MAAG,CAACe,eAAJ,EAAoB;AAClBA,IAAAA,eAAe,GAAC;AAACC,MAAAA,SAAS,EAAC,IAAX;AAAgBC,MAAAA,WAAW,EAAC,IAA5B;AAAiCC,MAAAA,KAAK,EAAC;AAAvC,KAAhB;AACD,GALsC,CAMvC;;;AACA,MAAG,CAACH,eAAe,CAACC,SAAjB,IAA4B,CAACD,eAAe,CAACE,WAA7C,IAA0D,CAACF,eAAe,CAACG,KAA9E,EAAoF;AAClFH,IAAAA,eAAe,GAAC;AAACC,MAAAA,SAAS,EAAC,IAAX;AAAgBC,MAAAA,WAAW,EAAC,IAA5B;AAAiCC,MAAAA,KAAK,EAAC;AAAvC,KAAhB;AACD;;AACD,MAAI;AAACF,IAAAA,SAAD;AAAWC,IAAAA,WAAX;AAAuBC,IAAAA;AAAvB,MAAgCH,eAApC;AACAD,EAAAA,MAAM,CAACJ,OAAP,CAAeM,SAAf,GAAyBA,SAAzB;AACAF,EAAAA,MAAM,CAACJ,OAAP,CAAeO,WAAf,GAA2BA,WAA3B;AACAH,EAAAA,MAAM,CAACJ,OAAP,CAAeQ,KAAf,GAAqBA,KAArB;AAEA,SAAOJ,MAAP;AACD,CAhBD;AAkBAR,KAAK,CAACK,YAAN,CAAmBQ,QAAnB,CAA4BN,GAA5B,CAAgC,UAAUM,QAAV,EAAoB;AAClD;AACA,SAAOA,QAAP;AACD,CAHD,EAGG,UAAUC,KAAV,EAAiB;AAClB;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAND;AAQA,eAAed,KAAf","sourcesContent":["import Axios from 'axios'\nimport {getStorage}from '@/plugins/common/storage'\n\nlet baseUrl = process.env.NODE_ENV==='production'?process.env.REACT_APP_BASE_URL:\"\"\nconst axios = Axios.create({\n  baseURL: baseUrl,\n  timeout: 2000,\n  headers: { 'Content-Type': 'foapplication/json;charset=UTF-8obar' }\n});\n\n//请求前干点事情，加上账号id和类型，token在头部\naxios.interceptors.request.use((config)=>{\n  //从localstorage中拿数据\n  let storageUserInfo=getStorage('storageUserInfo')\n  if(!storageUserInfo){\n    storageUserInfo={accountId:null,accountType:null,token:null}\n  }\n  //本地存储的用户信息不能为空\n  if(!storageUserInfo.accountId||!storageUserInfo.accountType||!storageUserInfo.token){\n    storageUserInfo={accountId:null,accountType:null,token:null}\n  }\n  let {accountId,accountType,token} = storageUserInfo\n  config.headers.accountId=accountId\n  config.headers.accountType=accountType\n  config.headers.token=token\n\n  return config;\n})\n\naxios.interceptors.response.use(function (response) {\n  // 对响应数据做点什么\n  return response;\n}, function (error) {\n  // 对响应错误做点什么\n  return Promise.reject(error);\n});\n\nexport default axios;"]},"metadata":{},"sourceType":"module"}