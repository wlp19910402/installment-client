{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _classnames3 = require('classnames');\n\nvar _classnames4 = _interopRequireDefault(_classnames3);\n\nvar _propTypes = require('prop-types');\n\nvar PropTypes = _interopRequireWildcard(_propTypes);\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _rmcFeedback = require('rmc-feedback');\n\nvar _rmcFeedback2 = _interopRequireDefault(_rmcFeedback);\n\nvar _getLocale = require('../_util/getLocale');\n\nvar _CustomInput = require('./CustomInput');\n\nvar _CustomInput2 = _interopRequireDefault(_CustomInput);\n\nvar _Input = require('./Input');\n\nvar _Input2 = _interopRequireDefault(_Input);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj['default'] = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar __rest = undefined && undefined.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n/* tslint:disable:jsx-no-multiline-js */\n\n\nfunction noop() {}\n\nfunction normalizeValue(value) {\n  if (typeof value === 'undefined' || value === null) {\n    return '';\n  }\n\n  return value + '';\n}\n\nvar InputItem = function (_React$Component) {\n  (0, _inherits3['default'])(InputItem, _React$Component);\n\n  function InputItem(props) {\n    (0, _classCallCheck3['default'])(this, InputItem);\n\n    var _this = (0, _possibleConstructorReturn3['default'])(this, (InputItem.__proto__ || Object.getPrototypeOf(InputItem)).call(this, props));\n\n    _this.onInputChange = function (e) {\n      var el = e.target;\n      var rawVal = el.value;\n      var prePos = 0;\n\n      try {\n        // some input type do not support selection, see https://html.spec.whatwg.org/multipage/input.html#do-not-apply\n        prePos = el.selectionEnd || 0;\n      } catch (error) {\n        console.warn('Get selection error:', error);\n      }\n\n      var _this$state$value = _this.state.value,\n          preCtrlVal = _this$state$value === undefined ? '' : _this$state$value;\n      var type = _this.props.type;\n      var ctrlValue = rawVal;\n\n      switch (type) {\n        case 'bankCard':\n          ctrlValue = rawVal.replace(/\\D/g, '').replace(/(....)(?=.)/g, '$1 ');\n          break;\n\n        case 'phone':\n          ctrlValue = rawVal.replace(/\\D/g, '').substring(0, 11);\n          var valueLen = ctrlValue.length;\n\n          if (valueLen > 3 && valueLen < 8) {\n            ctrlValue = ctrlValue.substr(0, 3) + ' ' + ctrlValue.substr(3);\n          } else if (valueLen >= 8) {\n            ctrlValue = ctrlValue.substr(0, 3) + ' ' + ctrlValue.substr(3, 4) + ' ' + ctrlValue.substr(7);\n          }\n\n          break;\n\n        case 'number':\n          ctrlValue = rawVal.replace(/\\D/g, '');\n          break;\n\n        case 'text':\n        case 'password':\n        default:\n          break;\n      }\n\n      _this.handleOnChange(ctrlValue, ctrlValue !== rawVal, function () {\n        switch (type) {\n          case 'bankCard':\n          case 'phone':\n          case 'number':\n            // controlled input type needs to adjust the position of the caret\n            try {\n              // some input type do not support selection, see https://html.spec.whatwg.org/multipage/input.html#do-not-apply\n              var pos = _this.calcPos(prePos, preCtrlVal, rawVal, ctrlValue, [' '], /\\D/g);\n\n              if (type === 'phone' && (pos === 4 || pos === 9) || type === 'bankCard' && pos > 0 && pos % 5 === 0) {\n                pos -= 1;\n              }\n\n              el.selectionStart = el.selectionEnd = pos;\n            } catch (error) {\n              console.warn('Set selection error:', error);\n            }\n\n            break;\n\n          default:\n            break;\n        }\n      });\n    };\n\n    _this.handleOnChange = function (value) {\n      var isMutated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var adjustPos = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n      var onChange = _this.props.onChange;\n\n      if (!('value' in _this.props)) {\n        _this.setState({\n          value: value\n        });\n      } else {\n        _this.setState({\n          value: _this.props.value\n        });\n      }\n\n      if (onChange) {\n        if (isMutated) {\n          setTimeout(function () {\n            onChange(value);\n            adjustPos();\n          });\n        } else {\n          onChange(value);\n          adjustPos();\n        }\n      } else {\n        adjustPos();\n      }\n    };\n\n    _this.onInputFocus = function (value) {\n      if (_this.debounceTimeout) {\n        clearTimeout(_this.debounceTimeout);\n        _this.debounceTimeout = null;\n      }\n\n      _this.setState({\n        focus: true\n      });\n\n      if (_this.props.onFocus) {\n        _this.props.onFocus(value);\n      }\n    };\n\n    _this.onInputBlur = function (value) {\n      if (_this.inputRef) {\n        // this.inputRef may be null if customKeyboard unmount\n        _this.debounceTimeout = window.setTimeout(function () {\n          if (document.activeElement !== (_this.inputRef && _this.inputRef.inputRef)) {\n            _this.setState({\n              focus: false\n            });\n          }\n        }, 200);\n      }\n\n      if (_this.props.onBlur) {\n        // fix autoFocus item blur with flash\n        setTimeout(function () {\n          // fix ios12 wechat browser click failure after input\n          if (document.body) {\n            document.body.scrollTop = document.body.scrollTop;\n          }\n        }, 100);\n\n        _this.props.onBlur(value);\n      }\n    };\n\n    _this.clearInput = function () {\n      if (_this.props.type !== 'password' && _this.props.updatePlaceholder) {\n        _this.setState({\n          placeholder: _this.props.value\n        });\n      }\n\n      _this.setState({\n        value: ''\n      });\n\n      if (_this.props.onChange) {\n        _this.props.onChange('');\n      }\n\n      _this.focus();\n    }; // this is instance method for user to use\n\n\n    _this.focus = function () {\n      if (_this.inputRef) {\n        _this.inputRef.focus();\n      }\n    }; // calculate the position of the caret\n\n\n    _this.calcPos = function (prePos, preCtrlVal, rawVal, ctrlVal, placeholderChars, maskReg) {\n      var editLength = rawVal.length - preCtrlVal.length;\n      var isAddition = editLength > 0;\n      var pos = prePos;\n\n      if (isAddition) {\n        var additionStr = rawVal.substr(pos - editLength, editLength);\n        var ctrlCharCount = additionStr.replace(maskReg, '').length;\n        pos -= editLength - ctrlCharCount;\n        var placeholderCharCount = 0;\n\n        while (ctrlCharCount > 0) {\n          if (placeholderChars.indexOf(ctrlVal.charAt(pos - ctrlCharCount + placeholderCharCount)) === -1) {\n            ctrlCharCount--;\n          } else {\n            placeholderCharCount++;\n          }\n        }\n\n        pos += placeholderCharCount;\n      }\n\n      return pos;\n    };\n\n    _this.state = {\n      placeholder: props.placeholder,\n      value: normalizeValue(props.value || props.defaultValue)\n    };\n    return _this;\n  }\n\n  (0, _createClass3['default'])(InputItem, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if ('placeholder' in nextProps && !nextProps.updatePlaceholder) {\n        this.setState({\n          placeholder: nextProps.placeholder\n        });\n      }\n\n      if ('value' in nextProps) {\n        this.setState({\n          value: nextProps.value\n        });\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this.debounceTimeout) {\n        window.clearTimeout(this.debounceTimeout);\n        this.debounceTimeout = null;\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _classnames,\n          _classnames2,\n          _this2 = this;\n\n      var props = (0, _extends3['default'])({}, this.props);\n      delete props.updatePlaceholder;\n\n      var prefixCls = props.prefixCls,\n          prefixListCls = props.prefixListCls,\n          editable = props.editable,\n          style = props.style,\n          clear = props.clear,\n          children = props.children,\n          error = props.error,\n          className = props.className,\n          extra = props.extra,\n          labelNumber = props.labelNumber,\n          type = props.type,\n          onExtraClick = props.onExtraClick,\n          onErrorClick = props.onErrorClick,\n          moneyKeyboardAlign = props.moneyKeyboardAlign,\n          moneyKeyboardWrapProps = props.moneyKeyboardWrapProps,\n          moneyKeyboardHeader = props.moneyKeyboardHeader,\n          onVirtualKeyboardConfirm = props.onVirtualKeyboardConfirm,\n          autoAdjustHeight = props.autoAdjustHeight,\n          disabledKeys = props.disabledKeys,\n          restProps = __rest(props, [\"prefixCls\", \"prefixListCls\", \"editable\", \"style\", \"clear\", \"children\", \"error\", \"className\", \"extra\", \"labelNumber\", \"type\", \"onExtraClick\", \"onErrorClick\", \"moneyKeyboardAlign\", \"moneyKeyboardWrapProps\", \"moneyKeyboardHeader\", \"onVirtualKeyboardConfirm\", \"autoAdjustHeight\", \"disabledKeys\"]);\n\n      var name = restProps.name,\n          disabled = restProps.disabled,\n          maxLength = restProps.maxLength;\n      var value = this.state.value; // tslint:disable-next-line:variable-name\n\n      var _locale = (0, _getLocale.getComponentLocale)(this.props, this.context, 'InputItem', function () {\n        return require('./locale/zh_CN');\n      });\n\n      var confirmLabel = _locale.confirmLabel,\n          backspaceLabel = _locale.backspaceLabel,\n          cancelKeyboardLabel = _locale.cancelKeyboardLabel;\n      var _state = this.state,\n          focus = _state.focus,\n          placeholder = _state.placeholder;\n      var wrapCls = (0, _classnames4['default'])(prefixListCls + '-item', prefixCls + '-item', prefixListCls + '-item-middle', className, (_classnames = {}, (0, _defineProperty3['default'])(_classnames, prefixCls + '-disabled', disabled), (0, _defineProperty3['default'])(_classnames, prefixCls + '-error', error), (0, _defineProperty3['default'])(_classnames, prefixCls + '-focus', focus), (0, _defineProperty3['default'])(_classnames, prefixCls + '-android', focus), _classnames));\n      var labelCls = (0, _classnames4['default'])(prefixCls + '-label', (_classnames2 = {}, (0, _defineProperty3['default'])(_classnames2, prefixCls + '-label-2', labelNumber === 2), (0, _defineProperty3['default'])(_classnames2, prefixCls + '-label-3', labelNumber === 3), (0, _defineProperty3['default'])(_classnames2, prefixCls + '-label-4', labelNumber === 4), (0, _defineProperty3['default'])(_classnames2, prefixCls + '-label-5', labelNumber === 5), (0, _defineProperty3['default'])(_classnames2, prefixCls + '-label-6', labelNumber === 6), (0, _defineProperty3['default'])(_classnames2, prefixCls + '-label-7', labelNumber === 7), _classnames2));\n      var controlCls = prefixCls + '-control';\n      var inputType = 'text';\n\n      if (type === 'bankCard' || type === 'phone') {\n        inputType = 'tel';\n      } else if (type === 'password') {\n        inputType = 'password';\n      } else if (type === 'digit') {\n        inputType = 'number';\n      } else if (type !== 'text' && type !== 'number') {\n        inputType = type;\n      }\n\n      var patternProps = void 0;\n\n      if (type === 'number') {\n        patternProps = {\n          pattern: '[0-9]*'\n        };\n      }\n\n      var classNameProps = void 0;\n\n      if (type === 'digit') {\n        classNameProps = {\n          className: 'h5numInput'\n        };\n      }\n\n      return React.createElement('div', {\n        className: wrapCls\n      }, React.createElement('div', {\n        className: prefixListCls + '-line'\n      }, children ? React.createElement('div', {\n        className: labelCls\n      }, children) : null, React.createElement('div', {\n        className: controlCls\n      }, type === 'money' ? React.createElement(_CustomInput2['default'], {\n        value: normalizeValue(value),\n        type: type,\n        ref: function ref(el) {\n          return _this2.inputRef = el;\n        },\n        maxLength: maxLength,\n        placeholder: placeholder,\n        onChange: this.onInputChange,\n        onFocus: this.onInputFocus,\n        onBlur: this.onInputBlur,\n        onVirtualKeyboardConfirm: onVirtualKeyboardConfirm,\n        disabled: disabled,\n        editable: editable,\n        prefixCls: prefixCls,\n        style: style,\n        confirmLabel: confirmLabel,\n        backspaceLabel: backspaceLabel,\n        cancelKeyboardLabel: cancelKeyboardLabel,\n        moneyKeyboardAlign: moneyKeyboardAlign,\n        moneyKeyboardWrapProps: moneyKeyboardWrapProps,\n        moneyKeyboardHeader: moneyKeyboardHeader,\n        autoAdjustHeight: autoAdjustHeight,\n        disabledKeys: disabledKeys\n      }) : React.createElement(_Input2['default'], (0, _extends3['default'])({}, patternProps, restProps, classNameProps, {\n        value: normalizeValue(value),\n        defaultValue: undefined,\n        ref: function ref(el) {\n          return _this2.inputRef = el;\n        },\n        style: style,\n        type: inputType,\n        maxLength: maxLength,\n        name: name,\n        placeholder: placeholder,\n        onChange: this.onInputChange,\n        onFocus: this.onInputFocus,\n        onBlur: this.onInputBlur,\n        readOnly: !editable,\n        disabled: disabled\n      }))), clear && editable && !disabled && value && ('' + value).length > 0 ? React.createElement(_rmcFeedback2['default'], {\n        activeClassName: prefixCls + '-clear-active'\n      }, React.createElement('div', {\n        className: prefixCls + '-clear',\n        onClick: this.clearInput\n      })) : null, error ? React.createElement('div', {\n        className: prefixCls + '-error-extra',\n        onClick: onErrorClick\n      }) : null, extra !== '' ? React.createElement('div', {\n        className: prefixCls + '-extra',\n        onClick: onExtraClick\n      }, extra) : null));\n    }\n  }]);\n  return InputItem;\n}(React.Component);\n\nInputItem.defaultProps = {\n  prefixCls: 'am-input',\n  prefixListCls: 'am-list',\n  type: 'text',\n  editable: true,\n  disabled: false,\n  placeholder: '',\n  clear: false,\n  onChange: noop,\n  onBlur: noop,\n  onFocus: noop,\n  extra: '',\n  onExtraClick: noop,\n  error: false,\n  onErrorClick: noop,\n  onVirtualKeyboardConfirm: noop,\n  labelNumber: 5,\n  updatePlaceholder: false,\n  moneyKeyboardAlign: 'right',\n  moneyKeyboardWrapProps: {},\n  moneyKeyboardHeader: null,\n  disabledKeys: null\n};\nInputItem.contextTypes = {\n  antLocale: PropTypes.object\n};\nexports['default'] = InputItem;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}