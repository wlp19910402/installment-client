{"ast":null,"code":"import Test from '@/components/test';\nimport Login from '@/views/Login';\nimport Main from '@/views/Main';\nimport Contact from '@/views/user/Contact';\n/**\n * 路由表\n * @param {*} path:地址\n * @param {*} name:名称\n * @param {*} component:组件\n * @param {*} isAuth:是否需要登录权限\n */\n\nconst routerMap = [{\n  path: '/',\n  name: '测试',\n  component: Test,\n  isAuth: true,\n  exact: true\n}, {\n  path: '/login',\n  name: '登录',\n  component: Login,\n  isAuth: false,\n  exact: true\n}, {\n  path: '/main/:type',\n  name: '主要的',\n  component: Main,\n  isAuth: true,\n  exact: false\n}, {\n  path: '/user/contact',\n  name: '联系客服',\n  component: Contact,\n  isAuth: true,\n  exact: true\n}];\nexport const routerMatch = path => {\n  return routerMap.find(item => item.path === path) || routerMap[0];\n};\nexport const pathMatch = path => {\n  let pathArr = path.split('/');\n  let regexp = /^\\{\\w+\\}$/i;\n  let matchRes = resArray.find(res => {\n    let itemArr = res.path.split('/');\n    itemArr.forEach((str, index) => {\n      if (regexp.test(str)) {\n        itemArr[index] = pathArr[index];\n      }\n    });\n\n    if (JSON.stringify(itemArr) === JSON.stringify(pathArr)) {\n      return res;\n    }\n  });\n\n  if (matchRes) {\n    return matchRes;\n  }\n};\nexport default routerMap;","map":{"version":3,"sources":["/Users/wlp6897/newProjects/cordovaProjects/installment/front-end/src/plugins/libs/routerMap.js"],"names":["Test","Login","Main","Contact","routerMap","path","name","component","isAuth","exact","routerMatch","find","item","pathMatch","pathArr","split","regexp","matchRes","resArray","res","itemArr","forEach","str","index","test","JSON","stringify"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,MAAMC,SAAS,GAAE,CAChB;AAACC,EAAAA,IAAI,EAAC,GAAN;AAAUC,EAAAA,IAAI,EAAC,IAAf;AAAoBC,EAAAA,SAAS,EAACP,IAA9B;AAAmCQ,EAAAA,MAAM,EAAC,IAA1C;AAA+CC,EAAAA,KAAK,EAAC;AAArD,CADgB,EAEhB;AAACJ,EAAAA,IAAI,EAAC,QAAN;AAAeC,EAAAA,IAAI,EAAC,IAApB;AAAyBC,EAAAA,SAAS,EAACN,KAAnC;AAAyCO,EAAAA,MAAM,EAAC,KAAhD;AAAsDC,EAAAA,KAAK,EAAC;AAA5D,CAFgB,EAGhB;AAACJ,EAAAA,IAAI,EAAC,aAAN;AAAoBC,EAAAA,IAAI,EAAC,KAAzB;AAA+BC,EAAAA,SAAS,EAACL,IAAzC;AAA8CM,EAAAA,MAAM,EAAC,IAArD;AAA0DC,EAAAA,KAAK,EAAC;AAAhE,CAHgB,EAIhB;AAACJ,EAAAA,IAAI,EAAC,eAAN;AAAuBC,EAAAA,IAAI,EAAC,MAA5B;AAAmCC,EAAAA,SAAS,EAACJ,OAA7C;AAAqDK,EAAAA,MAAM,EAAC,IAA5D;AAAiEC,EAAAA,KAAK,EAAC;AAAvE,CAJgB,CAAjB;AAOD,OAAO,MAAMC,WAAW,GAAEL,IAAD,IAAQ;AAC/B,SAAOD,SAAS,CAACO,IAAV,CAAeC,IAAI,IAAEA,IAAI,CAACP,IAAL,KAAYA,IAAjC,KAAwCD,SAAS,CAAC,CAAD,CAAxD;AAED,CAHM;AAKP,OAAO,MAAMS,SAAS,GAAIR,IAAD,IAAU;AACjC,MAAIS,OAAO,GAAGT,IAAI,CAACU,KAAL,CAAW,GAAX,CAAd;AACA,MAAIC,MAAM,GAAG,YAAb;AACA,MAAIC,QAAQ,GAAGC,QAAQ,CAACP,IAAT,CAAeQ,GAAD,IAAS;AACpC,QAAIC,OAAO,GAAGD,GAAG,CAACd,IAAJ,CAASU,KAAT,CAAe,GAAf,CAAd;AACAK,IAAAA,OAAO,CAACC,OAAR,CAAgB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC9B,UAAIP,MAAM,CAACQ,IAAP,CAAYF,GAAZ,CAAJ,EAAsB;AACpBF,QAAAA,OAAO,CAACG,KAAD,CAAP,GAAiBT,OAAO,CAACS,KAAD,CAAxB;AACD;AACF,KAJD;;AAKA,QAAIE,IAAI,CAACC,SAAL,CAAeN,OAAf,MAA4BK,IAAI,CAACC,SAAL,CAAeZ,OAAf,CAAhC,EAAyD;AACvD,aAAOK,GAAP;AACD;AACF,GAVc,CAAf;;AAWA,MAAIF,QAAJ,EAAc;AACZ,WAAOA,QAAP;AACD;AACF,CAjBM;AAkBP,eAAeb,SAAf","sourcesContent":["import Test from '@/components/test'\nimport Login from '@/views/Login'\nimport Main from '@/views/Main'\nimport Contact from '@/views/user/Contact'\n/**\n * 路由表\n * @param {*} path:地址\n * @param {*} name:名称\n * @param {*} component:组件\n * @param {*} isAuth:是否需要登录权限\n */\n const routerMap= [\n  {path:'/',name:'测试',component:Test,isAuth:true,exact:true},\n  {path:'/login',name:'登录',component:Login,isAuth:false,exact:true},\n  {path:'/main/:type',name:'主要的',component:Main,isAuth:true,exact:false},\n  {path:'/user/contact' ,name:'联系客服',component:Contact,isAuth:true,exact:true}\n]\n\nexport const routerMatch=(path)=>{\n  return routerMap.find(item=>item.path===path)||routerMap[0]\n\n}\n\nexport const pathMatch = (path) => {\n  let pathArr = path.split('/')\n  let regexp = /^\\{\\w+\\}$/i\n  let matchRes = resArray.find((res) => {\n    let itemArr = res.path.split('/')\n    itemArr.forEach((str, index) => {\n      if (regexp.test(str)) {\n        itemArr[index] = pathArr[index]\n      }\n    })\n    if (JSON.stringify(itemArr) === JSON.stringify(pathArr)) {\n      return res\n    }\n  })\n  if (matchRes) {\n    return matchRes\n  }\n}\nexport default routerMap"]},"metadata":{},"sourceType":"module"}