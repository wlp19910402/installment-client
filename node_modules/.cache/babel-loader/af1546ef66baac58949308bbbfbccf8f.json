{"ast":null,"code":"/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/*\n * Wait for the deviceready event before using any of Cordova's device APIs.\n * See https://cordova.apache.org/docs/en/latest/cordova/events/events.html#deviceready\n * document.addEventListener('deviceready', onDeviceReady, false);\n */\nexport const onDeviceReadyConfirm = () => {\n  navigator.notification.confirm('我是测试8下cordova-plugin-dialogs', // message\n  onConfirm, // callback\n  '测试DIALOGS', // title\n  ['确定', '取消'] // buttonName\n  );\n};\nexport const onDeviceReadyAlert = () => {\n  navigator.notification.alert('我是测试下cordova-plugin-dialogs', // message\n  onConfirm, // callback\n  '测试DIALOGS', // title\n  '我知道了' // buttonName\n  );\n};\n\nconst onConfirm = buttonIndex => {\n  // 点击按钮后的回调\n  if (buttonIndex === 1) {\n    alert(`我点击的按钮是${buttonIndex}`);\n  }\n\n  console.log(buttonIndex);\n};\n/**\n *\n */\n\n\nexport const cameraGetPicture = () => {\n  navigator.camera.getPicture(onSuccess, onFail, {\n    quality: 50,\n    targetWidth: 500,\n    targetHeight: 500\n  });\n};\n\nfunction onSuccess(imageURI) {\n  const image = document.getElementById('myImage');\n  image.src = imageURI;\n}\n\nfunction onFail(message) {\n  alert(`getPicture Failed because: ${message}`);\n}\n\nexport const cameraCleanup = () => {\n  navigator.camera.cleanup(onSuccess1, onFail1);\n};\n\nfunction onSuccess1() {\n  console.log('cleanup');\n}\n\nfunction onFail1(message) {\n  alert(` cleanup Failed because: ${message}`);\n}","map":{"version":3,"sources":["/Users/wlp6897/newProjects/cordovaProjects/installment/front-end/src/plugins/cordovaDro.js"],"names":["onDeviceReadyConfirm","navigator","notification","confirm","onConfirm","onDeviceReadyAlert","alert","buttonIndex","console","log","cameraGetPicture","camera","getPicture","onSuccess","onFail","quality","targetWidth","targetHeight","imageURI","image","document","getElementById","src","message","cameraCleanup","cleanup","onSuccess1","onFail1"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA,OAAO,MAAMA,oBAAoB,GAAG,MAAM;AACxCC,EAAAA,SAAS,CAACC,YAAV,CAAuBC,OAAvB,CACE,8BADF,EACkC;AAChCC,EAAAA,SAFF,EAEa;AACX,aAHF,EAGe;AACb,GAAC,IAAD,EAAO,IAAP,CAJF,CAIgB;AAJhB;AAMD,CAPM;AASP,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AACtCJ,EAAAA,SAAS,CAACC,YAAV,CAAuBI,KAAvB,CACE,6BADF,EACiC;AAC/BF,EAAAA,SAFF,EAEa;AACX,aAHF,EAGe;AACb,QAJF,CAIU;AAJV;AAMD,CAPM;;AASP,MAAMA,SAAS,GAAIG,WAAD,IAAiB;AACjC;AACA,MAAIA,WAAW,KAAK,CAApB,EAAuB;AACrBD,IAAAA,KAAK,CAAE,UAASC,WAAY,EAAvB,CAAL;AACD;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACD,CAND;AAQA;AACA;AACA;;;AAEA,OAAO,MAAMG,gBAAgB,GAAG,MAAM;AACpCT,EAAAA,SAAS,CAACU,MAAV,CAAiBC,UAAjB,CAA4BC,SAA5B,EAAuCC,MAAvC,EAA+C;AAAEC,IAAAA,OAAO,EAAE,EAAX;AAAeC,IAAAA,WAAW,EAAE,GAA5B;AAAiCC,IAAAA,YAAY,EAAE;AAA/C,GAA/C;AACD,CAFM;;AAIP,SAASJ,SAAT,CAAmBK,QAAnB,EAA6B;AAC3B,QAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAd;AACAF,EAAAA,KAAK,CAACG,GAAN,GAAYJ,QAAZ;AACD;;AAED,SAASJ,MAAT,CAAgBS,OAAhB,EAAyB;AACvBjB,EAAAA,KAAK,CAAE,8BAA6BiB,OAAQ,EAAvC,CAAL;AACD;;AAED,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjCvB,EAAAA,SAAS,CAACU,MAAV,CAAiBc,OAAjB,CAAyBC,UAAzB,EAAqCC,OAArC;AACD,CAFM;;AAIP,SAASD,UAAT,GAAsB;AACpBlB,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;;AAED,SAASkB,OAAT,CAAiBJ,OAAjB,EAA0B;AACxBjB,EAAAA,KAAK,CAAE,4BAA2BiB,OAAQ,EAArC,CAAL;AACD","sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/*\n * Wait for the deviceready event before using any of Cordova's device APIs.\n * See https://cordova.apache.org/docs/en/latest/cordova/events/events.html#deviceready\n * document.addEventListener('deviceready', onDeviceReady, false);\n */\n\nexport const onDeviceReadyConfirm = () => {\n  navigator.notification.confirm(\n    '我是测试8下cordova-plugin-dialogs', // message\n    onConfirm, // callback\n    '测试DIALOGS', // title\n    ['确定', '取消'], // buttonName\n  );\n};\n\nexport const onDeviceReadyAlert = () => {\n  navigator.notification.alert(\n    '我是测试下cordova-plugin-dialogs', // message\n    onConfirm, // callback\n    '测试DIALOGS', // title\n    '我知道了', // buttonName\n  );\n};\n\nconst onConfirm = (buttonIndex) => {\n  // 点击按钮后的回调\n  if (buttonIndex === 1) {\n    alert(`我点击的按钮是${buttonIndex}`);\n  }\n  console.log(buttonIndex);\n};\n\n/**\n *\n */\n\nexport const cameraGetPicture = () => {\n  navigator.camera.getPicture(onSuccess, onFail, { quality: 50, targetWidth: 500, targetHeight: 500 });\n};\n\nfunction onSuccess(imageURI) {\n  const image = document.getElementById('myImage');\n  image.src = imageURI;\n}\n\nfunction onFail(message) {\n  alert(`getPicture Failed because: ${message}`);\n}\n\nexport const cameraCleanup = () => {\n  navigator.camera.cleanup(onSuccess1, onFail1);\n};\n\nfunction onSuccess1() {\n  console.log('cleanup');\n}\n\nfunction onFail1(message) {\n  alert(` cleanup Failed because: ${message}`);\n}\n"]},"metadata":{},"sourceType":"module"}