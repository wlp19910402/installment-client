{"ast":null,"code":"import \"antd-mobile/lib/flex/style\";\nimport _Flex from \"antd-mobile/lib/flex\";\nimport \"antd-mobile/lib/wing-blank/style\";\nimport _WingBlank from \"antd-mobile/lib/wing-blank\";\nimport \"antd-mobile/lib/button/style\";\nimport _Button from \"antd-mobile/lib/button\";\nimport \"antd-mobile/lib/white-space/style\";\nimport _WhiteSpace from \"antd-mobile/lib/white-space\";\nimport \"antd-mobile/lib/list/style\";\nimport _List from \"antd-mobile/lib/list\";\nimport \"antd-mobile/lib/input-item/style\";\nimport _InputItem from \"antd-mobile/lib/input-item\";\nimport \"antd-mobile/lib/toast/style\";\nimport _Toast from \"antd-mobile/lib/toast\";\nvar _jsxFileName = \"/Users/wlp6897/newProjects/cordovaProjects/installment/front-end/src/views/Login.js\";\nimport React from 'react';\nimport { createForm } from 'rc-form';\nimport { USER_IDNTITY, getIdntityName, getUnIdntityName } from '@/plugins/resurceStatus/user';\nimport { regexp } from '@/plugins/common/regexp';\nimport { SET_USER_INFO } from '@/store/actions';\nimport { connect } from 'react-redux';\nimport { CLIENT_INTERFACE } from '@/plugins/libs/interfaceMap';\nimport axios from '@/plugins/requestServer/httpClient';\nimport PropTypes from 'prop-types';\n\nclass BasicInputExample extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loginUserIdentity: USER_IDNTITY.BANK_STAFF\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loginUserIdentity: this.props.user.accountType\n    });\n    document.body.querySelector('.qm-login-page').style.height = `${window.innerHeight}px`;\n  }\n\n  async tiggerLogin() {\n    const {\n      getFieldValue\n    } = this.props.form;\n    const accountId = getFieldValue('accountId');\n    const password = getFieldValue('pwd');\n    const accountType = this.state.loginUserIdentity;\n\n    if (accountId === undefined || password === undefined) {\n      _Toast.info('账号和密码不能为空', 1);\n\n      return;\n    }\n\n    if (!regexp.regMobile.test(accountId)) {\n      _Toast.info('请输入正确的11位手机号', 1);\n\n      return;\n    } // 基本验证通过，请求登录\n\n\n    try {\n      const res = await axios.post(CLIENT_INTERFACE.LOGIN, {\n        accountId,\n        password,\n        accountType\n      });\n\n      if (res.data.err !== '0') {\n        _Toast.info(res.data.msg, 1);\n\n        return;\n      }\n\n      const userData = {\n        accountId,\n        accountType,\n        ...res.data.result\n      };\n      this.props.setUserInfo(userData);\n\n      if (this.props.history.location.pathname === '/login') {\n        this.props.history.replace(this.props.user.redirectPath);\n      }\n    } catch (err) {\n      console.log(err);\n\n      _Toast.info('请求异常', 1); // 需删除\n\n    }\n  } // 切换身份登录\n\n\n  switchIndtify() {\n    this.setState({\n      loginUserIdentity: this.state.loginUserIdentity === USER_IDNTITY.FOREIGN_STAFF ? USER_IDNTITY.BANK_STAFF : USER_IDNTITY.FOREIGN_STAFF\n    });\n  }\n\n  render() {\n    const {\n      getFieldProps\n    } = this.props.form;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"qm-login-page qm-fill-width \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"qm-title-box sub-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, getIdntityName(this.state.loginUserIdentity), \"\\u767B\\u5F55\")), /*#__PURE__*/React.createElement(_Flex, {\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(_Flex.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(_WingBlank, {\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(_List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(_InputItem, Object.assign({}, getFieldProps('accountId'), {\n      placeholder: \"\\u8D26\\u53F7\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(_List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(_InputItem, Object.assign({}, getFieldProps('pwd'), {\n      type: \"password\",\n      placeholder: \"\\u5BC6\\u7801\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(_WhiteSpace, {\n      size: \"xl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(_WhiteSpace, {\n      size: \"xl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(_WhiteSpace, {\n      size: \"xl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(_Button, {\n      type: \"primary\",\n      onClick: this.tiggerLogin.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, \"\\u767B\\u5F55\"), /*#__PURE__*/React.createElement(_WhiteSpace, {\n      size: \"md\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(_Button, {\n      type: \"default\",\n      onClick: this.switchIndtify.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, \"\\u5207\\u6362\\u4E3A\\u201C\", getUnIdntityName(this.state.loginUserIdentity), \"\\u4EBA\\u5458\\u201D\")))));\n  }\n\n}\n\nBasicInputExample.propTypes = {\n  match: PropTypes.object,\n  history: PropTypes.object,\n  user: PropTypes.object,\n  form: PropTypes.object,\n  setUserInfo: PropTypes.func\n};\nconst BasicInputExampleWrapper = createForm()(BasicInputExample);\nexport default connect((state, props) => ({ ...props,\n  ...state\n}), {\n  setUserInfo(data) {\n    return {\n      type: SET_USER_INFO,\n      data\n    };\n  }\n\n})(BasicInputExampleWrapper);","map":{"version":3,"sources":["/Users/wlp6897/newProjects/cordovaProjects/installment/front-end/src/views/Login.js"],"names":["React","createForm","USER_IDNTITY","getIdntityName","getUnIdntityName","regexp","SET_USER_INFO","connect","CLIENT_INTERFACE","axios","PropTypes","BasicInputExample","Component","constructor","args","state","loginUserIdentity","BANK_STAFF","componentDidMount","setState","props","user","accountType","document","body","querySelector","style","height","window","innerHeight","tiggerLogin","getFieldValue","form","accountId","password","undefined","info","regMobile","test","res","post","LOGIN","data","err","msg","userData","result","setUserInfo","history","location","pathname","replace","redirectPath","console","log","switchIndtify","FOREIGN_STAFF","render","getFieldProps","bind","propTypes","match","object","func","BasicInputExampleWrapper","type"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { List, InputItem, WhiteSpace, Button, WingBlank, Flex, Toast} from 'antd-mobile';\nimport { createForm } from 'rc-form';\nimport { USER_IDNTITY, getIdntityName, getUnIdntityName } from '@/plugins/resurceStatus/user';\nimport { regexp } from '@/plugins/common/regexp';\nimport { SET_USER_INFO } from '@/store/actions';\nimport { connect } from 'react-redux';\nimport { CLIENT_INTERFACE } from '@/plugins/libs/interfaceMap';\nimport axios from '@/plugins/requestServer/httpClient';\nimport PropTypes from 'prop-types';\nclass BasicInputExample extends React.Component {\n  constructor(...args) {\n    super(...args)\n    this.state = {\n      loginUserIdentity: USER_IDNTITY.BANK_STAFF\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loginUserIdentity: this.props.user.accountType,\n    });\n    document.body.querySelector('.qm-login-page').style.height = `${window.innerHeight}px`;\n  }\n\n async tiggerLogin(){\n    const { getFieldValue } = this.props.form;\n    const accountId = getFieldValue('accountId');\n    const password = getFieldValue('pwd');\n    const accountType = this.state.loginUserIdentity;\n    if (accountId === undefined || password === undefined) {\n      Toast.info('账号和密码不能为空', 1);\n      return;\n    }\n    if (!regexp.regMobile.test(accountId)) {\n      Toast.info('请输入正确的11位手机号', 1);\n      return;\n    }\n    // 基本验证通过，请求登录\n    try {\n      const res = await axios.post(CLIENT_INTERFACE.LOGIN, { accountId, password, accountType });\n      if (res.data.err !== '0') {\n        Toast.info(res.data.msg, 1);\n        return;\n      }\n      const userData = { accountId, accountType, ...res.data.result };\n      this.props.setUserInfo(userData);\n      if (this.props.history.location.pathname === '/login') {\n        this.props.history.replace(this.props.user.redirectPath);\n      }\n    } catch (err) {\n      console.log(err);\n      Toast.info('请求异常', 1); // 需删除\n    }\n  }\n\n  // 切换身份登录\n  switchIndtify() {\n    this.setState({\n      loginUserIdentity: this.state.loginUserIdentity === USER_IDNTITY.FOREIGN_STAFF ? USER_IDNTITY.BANK_STAFF : USER_IDNTITY.FOREIGN_STAFF,\n    });\n  }\n\n  render() {\n    const { getFieldProps } = this.props.form;\n    return (\n      <div className=\"qm-login-page qm-fill-width \">\n        <div className=\"qm-title-box sub-title\">\n          <div className=\"title\">\n            {getIdntityName(this.state.loginUserIdentity)}\n            登录\n          </div>\n        </div>\n        <Flex justify=\"center\">\n          <Flex.Item>\n            <WingBlank size=\"lg\">\n              <List>\n                <InputItem {...getFieldProps('accountId')} placeholder=\"账号\" type=\"text\" />\n              </List>\n              <List>\n                <InputItem {...getFieldProps('pwd')} type=\"password\" placeholder=\"密码\" />\n              </List>\n              <WhiteSpace size=\"xl\" />\n              <WhiteSpace size=\"xl\" />\n              <WhiteSpace size=\"xl\" />\n              <Button type=\"primary\" onClick={this.tiggerLogin.bind(this)}>登录</Button>\n              <WhiteSpace size=\"md\" />\n              <Button type=\"default\" onClick={this.switchIndtify.bind(this)}>\n                切换为“\n                {getUnIdntityName(this.state.loginUserIdentity)}\n                人员”\n              </Button>\n            </WingBlank>\n          </Flex.Item>\n        </Flex>\n      </div>\n    );\n  }\n}\nBasicInputExample.propTypes = {\n  match: PropTypes.object,\n  history: PropTypes.object,\n  user: PropTypes.object,\n  form: PropTypes.object,\n  setUserInfo:PropTypes.func\n}\nconst BasicInputExampleWrapper = createForm()(BasicInputExample);\nexport default connect((state, props) => ({\n  ...props,\n  ...state,\n}), {\n  setUserInfo (data) {\n    return {\n      type: SET_USER_INFO,\n      data,\n    };\n  },\n})(BasicInputExampleWrapper);\n"]},"metadata":{},"sourceType":"module"}